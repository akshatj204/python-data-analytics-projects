# -*- coding: utf-8 -*-
"""Netflix Case Study.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LpdNUQ1H8-M8Ncolw0hgCUExpZPpC4Fq

**Importing Libraries and Packages**
"""

import pandas as pd
import numpy as np

!pip install matplotlib

import matplotlib.pyplot as plt
import seaborn as sns

"""**Reading CSV**"""

netflix = pd.read_csv('netflix.csv')

netflix.head()

"""**Analysing Dataset**"""

netflix.shape

netflix.isnull()

netflix.isnull().sum() # Number of null values in the data

# Check for significance of the number of missing values as a percentage of the total values

netflix[['director', 'cast', 'country']].isnull().mean()

# Significant Proportion of data in these 3 columns are missing. We will Fill na with "Not Available"

netflix.fillna("Not Available", inplace = True)
netflix

# Confirming if the dataset still has any null values.
netflix.isnull().sum()

netflix.info() # Columns Listed, Data Type also Listed.

netflix.describe() # Basic Stat Summary

"""**Basic Analysis**

Shows and Movies - Count
"""

tv_show = netflix.groupby('type')['title'].count().reset_index()
tv_show

tv_show_count = tv_show['title']

tv_show_type = tv_show['type']

# Pie Chart

plt.pie(labels = tv_show_type, x = tv_show_count, autopct='%1.0f%%')
plt.show()

"""Shows and Movies - Count by Country"""

subset_1 = netflix.groupby(['type','country'])['title'].count().reset_index()

netflix.groupby(['type','country'])['title'].nunique().reset_index()

"""Shows and Movies - Ratings"""

rating_dur1 = netflix[netflix['rating'].isin(["66 min",'74 min', '84 min'])]
rating_dur1

# Rating as 66 min, 74 min and 66 min. It seems duration has been wrongly assigned to rating.Entire dataset seems wrong. It might be better to remove this.

netflix = netflix[~netflix['show_id'].isin(['s5542', 's5795', 's5814'])]

netflix.reset_index()

subset_2 = netflix.groupby(['type','rating'])['title'].count().reset_index()
subset_2

subset_2_x_var = subset_2.rating

subset_2_y_var = subset_2.title

plt.figure(figsize=(16,8))
plt.xticks(rotation = 45, fontsize = 14)
plt.yticks(fontsize = 14)
plt.xlabel("Ratings",fontsize = 14)
plt.ylabel("Count",fontsize = 14)
sns.barplot(data = subset_2, x = subset_2_x_var, y = subset_2_y_var, hue = 'type')
plt.show()

"""**Duration statistics for Movies**"""

movies = netflix[netflix['type'] == "Movie"].reset_index()
movies

movies['duration_time'] = movies['duration'].str.split(' ').str[0]
movies

# Converting strings to integers

movies['duration_time'] = movies['duration_time'].astype(int)

movies['duration_time'].describe()

# Applying boxplot in the duration
plt.ylabel('Movie Duration Time')
sns.boxplot(data = movies['duration_time'])
plt.show()

# Create Bins based on duration

duration_bins = [movies['duration_time'].min(), 30, 90, 150, movies['duration_time'].max()]

duration_vals = ["Short_Movie", "Feature-Length", "Lengthy", "Stretched!"]

movies['duration_category'] = pd.cut(movies['duration_time'], bins = duration_bins, labels = duration_vals)

movies

# Bar Plots for Duration Categories

duration_bar_plot = movies['duration_category'].value_counts().reset_index()
duration_bar_plot

x_dur = duration_bar_plot['duration_category']

y_dur = duration_bar_plot['count']

plt.figure(figsize = (10,5))
sns.barplot(data = duration_bar_plot, x = x_dur, y=y_dur, color = 'orange')
plt.xlabel("Movie Duration")
plt.ylabel("Number of Movies")
plt.show()

# Most movies are Lengthy, i.e. between 90 to 150 mins long

"""**Movies - Duration and Years**"""

# Is there a trend between the duration category and the release year of the films.

release_dur = movies.groupby('release_year')['duration_category'].value_counts().reset_index()
release_dur

sns.lineplot(data = release_dur, x = release_dur['release_year'], y = release_dur['count'], hue = release_dur['duration_category'])
plt.yscale('log')
plt.show()

sns.lineplot(data = release_dur, x = release_dur['release_year'], y = release_dur['count'], hue = release_dur['duration_category'])
plt.show()

# There has been significant increase in the number of short films released in Netflix from the period 2010 onwards. Maybe there is a case to release old short films.
# Similarly, Films on average are lengthier

"""**Shows - Seasons**"""

shows = netflix[netflix['type'] == 'TV Show'].reset_index()
shows

shows['seasons'] = shows['duration'].str.split(' ').str[0]
shows

# Converting from strings to int
shows['seasons'] = shows['seasons'].astype(int)
shows['seasons'].describe()

plt.ylabel('Number of Seasons')
sns.boxplot(data = shows['seasons'])
plt.show()

# Only handful of shows with more than average number of seasons. 2 seems to be the avg.

# Season Categories - Bins

season_bins = [0,2,5,shows['seasons'].max()]

season_var = ["Short", "Mid", "Long"]

shows['seasons_cat'] = pd.cut(shows['seasons'], bins = season_bins, labels = season_var)

shows_bar = shows['seasons_cat'].value_counts().reset_index()
shows_bar

x_shows = shows_bar['seasons_cat']
y_shows = shows_bar['count']

plt.xlabel("No. of seasons for a show")
plt.ylabel("Count")
sns.barplot(data = shows_bar, x = x_shows, y=y_shows, color = "Green")
plt.show()

# Most are short shows - 0 to 2 seasons.

"""**Shows - Seasons and Year**"""

year_seasons = shows.groupby('release_year')['seasons_cat'].value_counts().reset_index()

year_seasons_new = year_seasons[year_seasons['release_year'] > 1990]

plt.yscale('log')
plt.xlabel("Release Year", fontsize = 10)
plt.ylabel("Number of Releases", fontsize = 10)
sns.lineplot(data = year_seasons, x = year_seasons['release_year'], y = year_seasons['count'], hue = year_seasons['seasons_cat'])
plt.show()

# plt.yscale('log')
plt.xlabel("Release Year", fontsize = 10)
plt.ylabel("Number of Releases", fontsize = 10)
sns.lineplot(data = year_seasons_new, x = year_seasons_new['release_year'], y = year_seasons_new['count'], hue = year_seasons_new['seasons_cat'])
plt.show()

# There has been some increase in the mid-size shows, however most of the shows are short at this point with 0-2 seasons.

"""**Netflix Releases per year**"""

netflix

# Add a new year column - Year_Added

netflix['year_added'] = netflix['date_added'].str.split(', ').str[1]
netflix

netflix_releases = netflix[['type','year_added']].value_counts().reset_index()
netflix_releases.sort_values(by = ['year_added'], inplace=True )

# Analysis of titles added in netflix since 2008.

plt.figure(figsize = (10,5))
plt.xlabel("Title Added in Netflix", fontsize = 10)
plt.ylabel("Number of Releases", fontsize = 10)
sns.lineplot(data = netflix_releases, x = netflix_releases['year_added'], y = netflix_releases['count'], hue = netflix_releases['type'])
plt.show()

# Significant decline in number of releases across the titles. However, reduction is more pronounced in Movies in comparison to Shows

"""**Releases Per Year**"""

releases = netflix[['type', 'release_year']].value_counts().reset_index().sort_values(by = ['release_year'])
releases

sns.lineplot(data = releases, x = releases['release_year'], y = releases['count'], hue = releases['type'])
plt.yscale('log')
plt.show()

releases_new = releases[releases['release_year'] > 1990]
releases_new

sns.lineplot(data = releases_new, x = releases_new['release_year'], y = releases_new['count'], hue = releases_new['type'])
plt.xlabel("Titles Released")
plt.ylabel("No. of Releases")
plt.show()

# Releases for Movies Peaked in 2016. For Shows, there has been an increasing trend. The reduction in 2020 seems to be due to Covid

"""**Country Analysis**"""

netflix

country_db = netflix.groupby(['type','country'])['title'].nunique().reset_index()
country_db

country_db['country'] = country_db['country'].str.split(',').apply(lambda x: [i.strip() for i in x])

country_db

all_countries = country_db['country'].explode()

all_countries = all_countries.to_frame()
all_countries

merged_db = all_countries.merge(country_db,left_index=True, right_index=True)
merged_db

merged_db.drop(columns = ['country_y'], inplace = True)

merged_db.reset_index(inplace = True)

merged_db.drop(columns = 'index', inplace = True)

merged_db.rename(columns={'country_x':'country'}, inplace = True)

merged_db

country_analysis = merged_db.groupby('type')['country'].value_counts().reset_index()

country_analysis

country_analysis_filtered = country_analysis[country_analysis['count'] > 10]
country_analysis_filtered

country_analysis[country_analysis['country'] == 'United Kingdom']

country_analysis['country'].nunique()

sns.barplot(data = country_analysis, x =country_analysis['country'], y =country_analysis['count'], hue = country_analysis['type'])
plt.show()

plt.figure(figsize = (20,5))
plt.xticks(rotation = 45)
plt.xlabel("Titles by Country")
plt.ylabel("Number of Titles")
sns.barplot(data = country_analysis_filtered, x =country_analysis_filtered['country'], y =country_analysis_filtered['count'], hue = country_analysis_filtered['type'])
plt.show()

# United States and UK produced most significant number of Movies. For Series, France, Canada, Germany have similar production but rest of the countries definitely lag.
# More Focus on Series Production in other countries.

"""**Country Analysis - US/UK**"""

# Lets Create a Bin to Find How many Movies/Shows are created outside US and UK.

country_analysis_movies =  country_analysis[country_analysis['type'] == "Movie"]
country_analysis_movies

country_analysis_movies['country_bin'] = country_analysis_movies['country'].apply(lambda x: 'US/UK' if x in ['United States', 'United Kingdom'] else 'Non US/UK')
country_analysis_movies

US_UK_analysis = country_analysis_movies.groupby('country_bin')['count'].sum()

US_UK_analysis = US_UK_analysis.reset_index()

plt.pie(data = US_UK_analysis, labels = US_UK_analysis['country_bin'], x = US_UK_analysis['count'], autopct='%1.0f%%')
plt.show()

# 28% of all movies are produced in US and UK.

country_analysis_shows =  country_analysis[country_analysis['type'] == "TV Show"]
country_analysis_shows

country_analysis_shows['country_bin'] = country_analysis_shows['country'].apply(lambda x: 'US/UK' if x in ['United States', 'United Kingdom'] else 'Non US/UK')
country_analysis_shows

US_UK_analysis_shows = country_analysis_shows.groupby('country_bin')['count'].sum()

US_UK_analysis_shows = US_UK_analysis_shows.reset_index()

plt.pie(data = US_UK_analysis_shows, labels = US_UK_analysis_shows['country_bin'], x = US_UK_analysis_shows['count'], autopct='%1.0f%%')
plt.show()

# Similarly 27% of all shows are US/UK produced.

"""**Genre Analysis**"""

netflix

genre_df = netflix.copy()

genre_df['category'] = genre_df['listed_in'].str.split(',').apply(lambda x: [i.strip() for i in x])

all_genres = genre_df['category'] .explode()

all_genres = all_genres.to_frame()

all_genres

# all_genres['index'] = all_genres.index
# all_genres.drop(columns = 'index', inplace = True)

merged_genre = all_genres.merge(genre_df, left_index=True, right_index = True)
merged_genre

merged_genre.drop(columns = 'category_y', inplace = True)

merged_genre.rename(columns = {'category_x': 'category'}, inplace = True)

merged_genre

sub_genre = merged_genre[['category', 'type', 'country', 'release_year']]
sub_genre

sub_genre_cat = sub_genre['category'].value_counts().reset_index()

sub_genre_cat

g = sns.displot(
    data=sub_genre_cat,
    x='category',
    y='count',
    kind='hist',
    height=6,
    aspect=1.5
)

# Access the axes and set xtick font size
g.ax.tick_params(axis='x', labelsize=6, rotation = 90)
plt.show()

# International Movies, Dramas, Comedies, International TV shows, Documentaries, Action and Adventure were the top genre/categories

sub_genre['country_bin'] = sub_genre['country'].apply(lambda x: 'US/UK' if x in ['United States', 'United Kingdom'] else 'Non US/UK')
sub_genre

sub_genre_country = sub_genre.groupby('country_bin')['category'].value_counts().reset_index()

sub_genre_country

p = sns.displot(
    data=sub_genre_country,
    x='category',
    y='count',
    hue = 'country_bin',
    kind='hist',
    height=6,
    aspect=1.5
)

# Access the axes and set xtick font size
p.ax.tick_params(axis='x', labelsize=6, rotation = 90)
plt.show()

# For US/UK, the categories seem to be much more spread-out. A lot of Non US/UK titles are categorized under International movies and Shows, which makes some sense

"""**Actors/Directors Analysis**"""

netflix

directors = netflix.groupby(['director', 'type'])['title'].count().reset_index()

directors

directors.sort_values(by = ['title'],ascending = False).head(10)

#Top 10 Directors from the viewpoint of number of films made. Director was not available for most of the titles. All of those are Movie Directors

directors_country = netflix.groupby(['director', 'type', 'country'])['title'].count().reset_index()

directors_country = directors_country[directors_country['director']!= 'Not Available'].sort_values(by = ['title'],ascending = False)

directors_country.head(10)

# 5 of the Top 10 directors are producing US-based Movie. In two cases, we dont have the information on the country of the title.

merged_genre

directors = merged_genre.groupby(['director', 'category'])['title'].count().reset_index()
directors

directors = directors[directors['director']!= 'Not Available']

top_director = directors.sort_values(by = 'title', ascending=False).reset_index(drop = True)
top_director = top_director.head(20)

pivot_director = pd.pivot(data = top_director, values = ['title'], columns = 'category', index = 'director' )

pivot_director.fillna(0, inplace = True)

pivot_director

plt.figure(figsize=(10, 6))
sns.heatmap(pivot_director, annot = True, cmap='YlGnBu')
plt.title('Frequency of Categories by Director')
plt.ylabel('Director')
plt.xlabel('Category')
plt.show()

# This is Done!!!